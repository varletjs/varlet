import{b as s,m as a,p as d,$ as c,q as r,Q as e,w as n,e as i,h as l}from"./index-B7X_Lqq8.js";const h={components:{}},p={class:"varlet-site-doc"},m={class:"card"},u={id:"Props"},v={class:"card"},b={id:"Events"},y={class:"card"},k={id:"Slots"};function f(g,t,_,x,S,T){const o=i("router-link");return l(),a("div",p,[t[9]||(t[9]=d("h2",null,"API",-1)),d("div",m,[d("h3",u,[r(o,{to:"#Props"},{default:n(()=>t[0]||(t[0]=[e("#")])),_:1}),t[1]||(t[1]=e("Props"))]),t[2]||(t[2]=c('<table><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>v-model</code></td><td>The value of the binding</td><td><em>any</em></td><td><code>false</code></td></tr><tr><td><code>checked-value</code></td><td>Checked value</td><td><em>any</em></td><td><code>true</code></td></tr><tr><td><code>unchecked-value</code></td><td>Unchecked value</td><td><em>any</em></td><td><code>false</code></td></tr><tr><td><code>checked-color</code></td><td>Checked color</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>unchecked-color</code></td><td>Unchecked color</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>icon-size</code></td><td>Icon size</td><td><em>string | number</em></td><td><code>-</code></td></tr><tr><td><code>readonly</code></td><td>Whether the readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>disabled</code></td><td>Whether the disabled</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>ripple</code></td><td>Whether to open ripple</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>rules</code></td><td>Validation rules, return <code>true</code> to indicate verification passes, other types of values ​​will be converted into text as user prompts. <a href="#/en-US/zodValidation">Zod validation</a> is supported since <code>3.5.0</code></td><td><em>((v: any) =&gt; any) | ZodType | Array&lt;((v: any) =&gt; any) | ZodType&gt;</em></td><td><code>-</code></td></tr></tbody></table>',1))]),d("div",v,[d("h3",b,[r(o,{to:"#Events"},{default:n(()=>t[3]||(t[3]=[e("#")])),_:1}),t[4]||(t[4]=e("Events"))]),t[5]||(t[5]=c("<table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td><code>click</code></td><td>Triggered on click</td><td><code>e: Event</code></td></tr><tr><td><code>change</code></td><td>Triggered on change</td><td><code>value: any</code></td></tr></tbody></table>",1))]),d("div",y,[d("h3",k,[r(o,{to:"#Slots"},{default:n(()=>t[6]||(t[6]=[e("#")])),_:1}),t[7]||(t[7]=e("Slots"))]),t[8]||(t[8]=c("<table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td><code>checked-icon</code></td><td>Checked icon</td><td><code>-</code></td></tr><tr><td><code>unchecked-icon</code></td><td>Unchecked icon</td><td><code>-</code></td></tr><tr><td><code>default</code></td><td>Displayed text</td><td><code>checked: boolean</code> is checked</td></tr></tbody></table>",1))])])}const P=s(h,[["render",f]]);export{P as default};
