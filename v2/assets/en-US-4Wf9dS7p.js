import{_ as n,b as s,e as r,m as l,p as t,q as o,w as c,P as e,Z as i}from"./index-vwO9GBzB.js";const u={components:{}},a={class:"varlet-site-doc"},m=t("h2",null,"API",-1),p={class:"card"},b={id:"Props"},h=i("<table><thead><tr><th>Prop</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>span</code></td><td>Number of grids occupied by columns</td><td><em>string | number</em></td><td><code>24</code></td></tr><tr><td><code>offset</code></td><td>Number of grids for column offsets</td><td><em>string | number</em></td><td><code>0</code></td></tr><tr><td><code>direction</code></td><td>The optional value of layout direction is <code>row</code> <code>column</code></td><td><em>string</em></td><td><code>row</code></td></tr><tr><td><code>justify</code></td><td>Main axis arrangement, can be set to <code>flex-start</code> <code>flex-end</code> <code>center</code> <code>space-around</code> <code>space-between</code></td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>align</code></td><td>Cross axis arrangement, can be set to <code>stretch</code> <code>center</code> <code>flex-start</code> <code>flex-end</code> <code>baseline</code></td><td><em>string</em></td><td><code>-</code></td></tr><tr><td><code>xs</code></td><td><code>&lt;768px</code> Responsive columns or column props object</td><td><em>string | number | { span?: number | string, offset?: number | string }</em></td><td><code>-</code></td></tr><tr><td><code>sm</code></td><td><code>≥768px</code> Responsive columns or column props object</td><td><em>string | number | { span?: number | string, offset?: number | string }</em></td><td><code>-</code></td></tr><tr><td><code>md</code></td><td><code>≥992px</code> Responsive columns or column props object</td><td><em>string | number | { span?: number | string, offset?: number | string }</em></td><td><code>-</code></td></tr><tr><td><code>lg</code></td><td><code>≥1200px</code> Responsive columns or column props object</td><td><em>string | number | { span?: number | string, offset?: number | string }</em></td><td><code>-</code></td></tr><tr><td><code>xl</code></td><td><code>≥1920px</code> Responsive columns or column props object</td><td><em>string | number | { span?: number | string, offset?: number | string }</em></td><td><code>-</code></td></tr></tbody></table>",1),_={class:"card"},f={id:"Events"},g=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"Event"),t("th",null,"Description"),t("th",null,"Arguments")])]),t("tbody",null,[t("tr",null,[t("td",null,[t("code",null,"click")]),t("td",null,"Triggered on click"),t("td",null,[t("code",null,"event: Event")])])])],-1),v={class:"card"},x={id:"Slots"},y=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Description"),t("th",null,"SlotProps")])]),t("tbody",null,[t("tr",null,[t("td",null,[t("code",null,"default")]),t("td",null,"Col content"),t("td",null,[t("code",null,"-")])])])],-1);function N(P,j,k,E,S,w){const d=s("router-link");return r(),l("div",a,[m,t("div",p,[t("h3",b,[o(d,{to:"#Props"},{default:c(()=>[e("#")]),_:1}),e("Props")]),h]),t("div",_,[t("h3",f,[o(d,{to:"#Events"},{default:c(()=>[e("#")]),_:1}),e("Events")]),g]),t("div",v,[t("h3",x,[o(d,{to:"#Slots"},{default:c(()=>[e("#")]),_:1}),e("Slots")]),y])])}const C=n(u,[["render",N]]);export{C as default};
